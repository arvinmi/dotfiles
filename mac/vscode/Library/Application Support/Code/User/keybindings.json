[
  // general window and sidebar
  {
    "key": "shift+cmd+escape",
    "command": "workbench.action.remote.close"
  },
  {
    "key": "cmd+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+b",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "shift+cmd+e",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "ctrl+shift+g",
    "command": "-workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "shift+cmd+d",
    "command": "workbench.action.splitEditorDown",
    "when": "!terminalFocus"
  },
  {
    "key": "shift+cmd+x",
    "command": "workbench.view.extensions",
    "when": "viewContainer.workbench.view.extensions.enabled"
  },
  // editor and cursor
  {
    "key": "cmd+r",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+up",
    "command": "-editor.action.insertCursorAbove",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "editor.action.changeAll"
  },
  {
    "key": "alt+r",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "-editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  // formatting and search
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument.none",
    "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
  },
  {
    "key": "shift+alt+f",
    "command": "-notebook.format",
    "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "shift+alt+f",
    "command": "-filesExplorer.findInFolder",
    "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "shift+alt+f",
    "command": "-search.action.restrictSearchToFolder",
    "when": "folderMatchWithResourceFocus && searchViewletVisible"
  },
  {
    "key": "shift+alt+f",
    "command": "-editor.action.formatDocument",
    "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
  },
  // chat stuff
  {
    "key": "cmd+l",
    "command": "composerMode.chat"
  },
  {
    "key": "cmd+l",
    "command": "-aichat.newchataction"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "alt+cmd+b",
    "command": "-workbench.action.toggleAuxiliaryBar"
  },
  {
    "key": "cmd+k",
    "command": "inlineChat.start",
    "when": "editorFocus && inlineChatHasProvider && !editorReadonly"
  },
  {
    "key": "shift+cmd+k",
    "command": "cursorai.action.generateInTerminal",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalPromptBarVisible || terminalProcessSupported && terminalPromptBarVisible"
  },
  {
    "key": "cmd+k",
    "command": "-cursorai.action.generateInTerminal",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalPromptBarVisible || terminalProcessSupported && terminalPromptBarVisible"
  },
  {
    "key": "cmd+i",
    "command": "-composer.startComposerPrompt"
  },
  {
    "key": "ctrl+cmd+i",
    "command": "-workbench.action.chat.open",
    "when": "!chatSetupHidden"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorTextFocus && @inlineDiffs.acceptPartialEdit.isActiveEditorWithDiffs"
  },
  {
    "key": "cmd+y",
    "command": "-editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorTextFocus && @inlineDiffs.acceptPartialEdit.isActiveEditorWithDiffs"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.inlineDiffs.rejectPartialEdit",
    "when": "editorTextFocus && @inlineDiffs.rejectPartialEdit.isActiveEditorWithDiffs"
  },
  {
    "key": "cmd+n",
    "command": "-editor.action.inlineDiffs.rejectPartialEdit",
    "when": "editorTextFocus && @inlineDiffs.rejectPartialEdit.isActiveEditorWithDiffs"
  },
  {
    "key": "ctrl+y",
    "command": "editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorHasPromptBar && editorPromptBarFocused"
  },
  {
    "key": "cmd+y",
    "command": "-editor.action.inlineDiffs.acceptPartialEdit",
    "when": "editorHasPromptBar && editorPromptBarFocused"
  },
  {
    "key": "ctrl+n",
    "command": "editor.action.inlineDiffs.rejectPartialEdit",
    "when": "editorHasPromptBar && editorPromptBarFocused"
  },
  {
    "key": "cmd+n",
    "command": "-editor.action.inlineDiffs.rejectPartialEdit",
    "when": "editorHasPromptBar && editorPromptBarFocused"
  },
  {
    "key": "escape",
    "command": "-extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl"
  },
  {
    "key": "escape",
    "command": "extension.vim_escape",
    "when": "editorTextFocus && vim.active && !inDebugRepl && !testing.isPeekVisible && !testing.isInPeek && (vim.mode == 'Insert' || !notebookEditorFocused) && !inlineEditIsVisible && !suggestWidgetVisible && !findWidgetVisible && !dirtyDiffVisible"
  },
  {
    "key": "escape",
    "command": "runCommands",
    "when": "vim.mode == 'Insert' && inlineEditIsVisible",
    "args": {
      "commands": ["editor.action.inlineSuggest.hide", "extension.vim_escape"]
    }
  },
  {
    "key": "escape",
    "command": "runCommands",
    "when": "vim.mode == 'Insert' && suggestWidgetVisible",
    "args": {
      "commands": ["hideSuggestWidget", "extension.vim_escape"]
    }
  },
  {
    "key": "escape",
    "command": "-hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "escape",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus && !vim.active"
  },
  // editor splitting
  {
    "key": "cmd+d",
    "command": "workbench.action.splitEditor",
    "when": "!terminalFocus"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  {
    "key": "alt+e",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "alt+tab",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
  },
  // terminal
  {
    "key": "alt+t",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "cmd+t",
    "command": "workbench.action.terminal.new",
    "when": "terminalFocus && terminalProcessSupported || terminalWebExtensionContributedProfile"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.terminal.kill",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+w",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "workbench.action.terminal.resizePaneUp",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "workbench.action.terminal.resizePaneDown",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  // panel
  {
    "key": "alt+m",
    "command": "workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "shift+cmd+m",
    "command": "-workbench.actions.view.problems",
    "when": "workbench.panel.markers.view.active"
  },
  {
    "key": "alt+y",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  // files
  {
    "key": "cmd+n",
    "command": "workbench.files.action.createFileFromExplorer"
  },
  {
    "key": "cmd+ctrl+n",
    "command": "workbench.files.action.createFolderFromExplorer"
  },
  {
    "key": "alt+a",
    "command": "workbench.files.action.showActiveFileInExplorer",
    "when": "editorFocus"
  },
  // zoom and font
  {
    "key": "ctrl+shift+=",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+shift+-",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+shift+0",
    "command": "editor.action.fontZoomReset"
  },
  {
    "key": "cmd+0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "alt+b",
    "command": "markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "alt+j",
    "command": "markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "cmd+i",
    "command": "-markdown.extension.editing.toggleItalic",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "alt+m",
    "command": "markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "cmd+m",
    "command": "-markdown.extension.editing.toggleMath",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  }
]
